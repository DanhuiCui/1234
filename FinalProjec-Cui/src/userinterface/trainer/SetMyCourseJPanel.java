/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.trainer;

import Business.Logic.RecDic;
import Business.Models.Course;
import Business.Models.User;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import userinterface.MainJFrame;

/**
 *
 * @author Administrator
 */
public class SetMyCourseJPanel extends javax.swing.JPanel {

    JPanel container;
    private String CourseID = null;
    List<Course> listCourse;
    /**
     * Creates new form SetMyCourseJPanel
     */
    public SetMyCourseJPanel(JPanel container) {
        initComponents();
        this.container = container;
        this.LoadCourseData();
    }
    
    public void paintComponent(Graphics g){
        int x = 0;
        int y = 0;
        ImageIcon icon = new ImageIcon("dalishi.jpg");
        //g.setColor(new Color(0,0,0,220));
        g.drawImage(icon.getImage(), x, y, getSize().width,getSize().height,this);
    }
    
    private void ReSet(){
        this.CourseID = null;
        this.comboCourseName.setSelectedItem("Balance");
        this.jDate.setText("");
        this.comboTime.setSelectedItem("10:00-10:30");
        this.txtClassHour.setText("30");
        this.comboAddress.setSelectedItem("Building 12  Room 107");
    }
    
    static boolean checkDate(String date) {
        Pattern p = Pattern.compile("^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$");
        return p.matcher(date).matches();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCourse = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtClassHour = new javax.swing.JFormattedTextField();
        btnSave = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        comboCourseName = new javax.swing.JComboBox<>();
        comboTime = new javax.swing.JComboBox<>();
        comboAddress = new javax.swing.JComboBox<>();
        btnDelete = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jDate = new javax.swing.JTextField();

        jLabel1.setText("Course Name:");

        tableCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableCourse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCourseMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCourse);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Course Date:");

        jLabel7.setText("Address:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Time:");

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel5.setText("Class Hour(min):");

        txtClassHour.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtClassHour.setText("30");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        comboCourseName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Balance", "Abs/Back", "Comprehensive Training", "Shape Stretching", "Core Training", "Body Pump", "Body Combat", "Burning Fat Training", " " }));

        comboTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10:00-10:30", "10:50-11:20", "14:00-14:30", "14:50-15:20", "15:40-16:10", "16:30-17:00", "19:00-19:30", "19:50-20:20", "20:40-21:10", " " }));

        comboAddress.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Building 12  Room 107", "Building 12  Room 108", "Building 12  Room 109", "Building 12  Room 201", "Building 12  Room 202", "Building 12  Room 203", " " }));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Set Course");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboTime, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(80, 80, 80)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtClassHour, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                    .addComponent(jDate)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(153, 153, 153)
                        .addComponent(jLabel4))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnReset)
                            .addGap(18, 18, 18)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBack, btnDelete, btnReset, btnSave});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {comboAddress, comboCourseName, comboTime, jDate, txtClassHour});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(jLabel4))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(comboCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtClassHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(comboTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(comboAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnReset)
                    .addComponent(btnSave))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBack, btnSave, comboAddress, comboCourseName, comboTime, jDate, jLabel1, jLabel2, jLabel3, jLabel5, jLabel7, txtClassHour});

    }// </editor-fold>//GEN-END:initComponents

    private void tableCourseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCourseMouseClicked
        // TODO add your handling code here:
        int n = this.tableCourse.getSelectedRow();
        if(n<0) return;
        if(this.listCourse!=null){
            Course c = this.listCourse.get(n);
            this.CourseID = c.CourseID;
            this.comboCourseName.setSelectedItem(c.CourseName);
            this.jDate.setText(c.CourseDate);
            this.comboTime.setSelectedItem(c.CourseTime);
            this.txtClassHour.setText(String.format("%d", c.ClassHour));
            this.comboAddress.setSelectedItem(c.Address);
        }
    }//GEN-LAST:event_tableCourseMouseClicked

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        ReSet();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        List<Course> listCourse1;
        List<Course> listCourse2 = new ArrayList<Course>();
        String date = jDate.getText();
        
        if(date.equals("")){
            JOptionPane.showMessageDialog(null, "Please enter a date!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }else{
            if(!checkDate(date)){
            JOptionPane.showMessageDialog(null, "Please enter date in yyyy-mm-dd format!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
            }
        }
        
        
        
        
        Course c = new Course();
        c.CourseID = this.CourseID;
        c.CourseName = (String)this.comboCourseName.getSelectedItem();
        c.CourseDate = date;
        c.CourseTime = (String)this.comboTime.getSelectedItem();
        //if(this.txtClassHour.getText().isEmpty())this.txtClassHour.setText("0");
        c.ClassHour = Integer.parseInt(this.txtClassHour.getText());
        c.Address = (String)this.comboAddress.getSelectedItem();
        c.TrainerName = MainJFrame.userAccount.getUsername();
        c.TrainerUserName = MainJFrame.userAccount.getUsername();
        c.OrgID = MainJFrame.userAccount.Enterprise.getName();
        c.IsPrivate = "1";
        
        listCourse1 = RecDic.QueryPrivateCourse(MainJFrame.userAccount.getUsername());
        for(Course c1 : listCourse1){
            if(c1.CourseDate.equals(date)){
                listCourse2.add(c1);
            }
        }
        String time = comboTime.getSelectedItem().toString();
        for(Course c2 : listCourse2){
            if(c2.CourseTime.equals(time)){
                JOptionPane.showMessageDialog(null, "Time conflict!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }

        boolean res = RecDic.SaveCourse(c);
        if(res) {
            this.LoadCourseData();
            ReSet();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);  
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int n = this.tableCourse.getSelectedRow();
        if(n<0) return;
        RecDic.DeleteCourse(this.tableCourse.getValueAt(n, 0).toString());
        this.LoadCourseData();
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> comboAddress;
    private javax.swing.JComboBox<String> comboCourseName;
    private javax.swing.JComboBox<String> comboTime;
    private javax.swing.JTextField jDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableCourse;
    private javax.swing.JFormattedTextField txtClassHour;
    // End of variables declaration//GEN-END:variables

    private void LoadCourseData() {
        listCourse = RecDic.QueryPrivateCourse(MainJFrame.userAccount.getUsername());
        DefaultTableModel tableModel = (DefaultTableModel)this.tableCourse.getModel();
        String[] cols = new String[]{"Course Name","Date","Time","Trainer","Class Hour","Address"};
        String[][] rows= new String[listCourse.size()][6];
        for (int i = 0; i < listCourse.size(); i++) {
            rows[i][0] = listCourse.get(i).CourseName;
            rows[i][1] = listCourse.get(i).CourseDate;
            rows[i][2] = listCourse.get(i).CourseTime;
            rows[i][3] = listCourse.get(i).TrainerName;
            rows[i][4] = String.format("%d", listCourse.get(i).ClassHour);
            rows[i][5] = listCourse.get(i).Address;
        }
        tableModel.setDataVector(rows, cols);
        
        TableColumn column = null;
        column = tableCourse.getColumnModel().getColumn(5);
        column.setPreferredWidth(150);
        
        TableColumn column1 = null;
        column1 = tableCourse.getColumnModel().getColumn(0);
        column1.setPreferredWidth(150);
    }
}
